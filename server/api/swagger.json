{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "FlowSensei"
    },
    "definitions": {
        "SourceModel": {
            "type": "object",
            "properties": {
                "hubId": {
                    "description": "the unique id associated with the hub the source is currently being monitored by",
                    "type": "integer"
                },
                "pinId": {
                    "description": "the unique id associated with the pin the source is currently being monitored by",
                    "type": "integer"
                },
                "name": {
                    "description": "the name of the source",
                    "type": "string"
                },
                "connectedOn": {
                    "description": "the name of the source",
                    "type": "string"
                },
                "capacity": {
                    "description": "the amount of liquid the source contains in liters",
                    "type": "number",
                    "format": "float"
                },
                "dispensed": {
                    "description": "used to correct the amount of liquid dispensed",
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "FlowModel": {
            "type": "object",
            "required": [
                "hubId",
                "pinId",
                "timestamp",
                "duration",
                "amount"
            ],
            "properties": {
                "hubId": {
                    "description": "the unique id associated with the hub the sensor is connected to",
                    "type": "integer"
                },
                "pinId": {
                    "description": "the unique id associated with the pin the sensor is connected to",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "when flow started",
                    "type": "string"
                },
                "duration": {
                    "description": "the duration of the flow event in seconds",
                    "type": "number",
                    "format": "float"
                },
                "amount": {
                    "description": "the amount of flow that occured in liters",
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "HubModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "the name of the hub",
                    "type": "integer"
                },
                "locationId": {
                    "description": "the unique id assigned to the location the hub is at",
                    "type": "integer"
                },
                "company": {
                    "description": "the owning company of the hub",
                    "type": "string"
                },
                "pinConfiguration": {
                    "description": "what sources are hooked up to which pins (will overwrite the current pin config)",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "pinId",
                            "sourceId"
                        ],
                        "properties": {
                            "pinId": {
                                "type": "integer"
                            },
                            "sourceId": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/hub": {
            "put": {
                "description": "Used to register a new hub with the reporting service.\n",
                "parameters": [
                    {
                        "name": "registrationCode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "registrationCode",
                                "userId"
                            ],
                            "properties": {
                                "registrationCode": {
                                    "type": "string",
                                    "description": "the unique identifier assigned to the hub"
                                },
                                "userId": {
                                    "type": "integer",
                                    "description": "Should be provided somehow maybe from the back end"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "schema": {
                            "title": "id",
                            "type": "integer",
                            "description": "the unique id for the newly registered hub"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "requestTemplates": {
                        "application/json": "{\n  \"resource\": \"$context.resourcePath\",\n  \"body\" : $input.json('$'),\n  \"headers\": {\n    #foreach($header in $input.params().header.keySet())\n    \"$header\": \"$util.escapeJavaScript($input.params().header.get($header))\" #if($foreach.hasNext),#end\n\n    #end\n  },\n  \"method\": \"$context.httpMethod\",\n  \"params\": {\n    #foreach($param in $input.params().path.keySet())\n    \"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\" #if($foreach.hasNext),#end\n\n    #end\n  },\n  \"query\": {\n    #foreach($queryParam in $input.params().querystring.keySet())\n    \"$queryParam\": \"$util.escapeJavaScript($input.params().querystring.get($queryParam))\" #if($foreach.hasNext),#end\n\n    #end\n  }  \n}"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            },
            "post": {
                "description": "Used to update the hub configuration\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the unique id for the hub",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "name": "hubInfo",
                        "in": "body",
                        "description": "fields to update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HubModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "schema": {
                            "title": "id",
                            "description": "the id associated with this hub"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            },
            "get": {
                "description": "Used to get hub information\n",
                "parameters": [
                    {
                        "name": "id",
                        "description": "the unique id associated with the hub",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource found",
                        "schema": {
                            "$ref": "#/definitions/HubModel"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            }
        },
        "/flow": {
            "put": {
                "description": "Used to report a flow event\n",
                "parameters": [
                    {
                        "name": "flowInfo",
                        "in": "body",
                        "description": "flow report info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FlowModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful transaction"
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            }
        },
        "/source": {
            "put": {
                "description": "Used to create a new source\n",
                "parameters": [
                    {
                        "name": "sourceInfo",
                        "in": "body",
                        "description": "source initial",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SourceModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful transaction",
                        "schema": {
                            "title": "id",
                            "type": "integer",
                            "description": "the unique id for the newly created source"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            },
            "post": {
                "description": "Used to update a sources information\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "the unique identifier for the source",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "sourceInfo",
                        "in": "body",
                        "description": "source info",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SourceModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful transaction"
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            },
            "get": {
                "description": "Used to get source information\n",
                "parameters": [
                    {
                        "name": "id",
                        "description": "the unique id associated with the source",
                        "in": "query",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource found",
                        "schema": {
                            "$ref": "#/definitions/SourceModel"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:893981223404:function:FlowSensei/invocations",
                    "httpMethod": "POST",
                    "credentials": "arn:aws:iam::893981223404:role/FlowSenseiLambdaInvoker",
                    "cacheNamespace": "cache namespace",
                    "cacheKeyParameters": [],
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseParameters": {}
                        }
                    }
                }
            }
        }
    }
}